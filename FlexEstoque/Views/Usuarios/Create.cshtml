@using FlexEstoque.Enum;
@model FlexEstoque.Models.Usuario

@{
    ViewData["Title"] = "Criar Usuário";
}

<h1>Cadastrar Usuário</h1>

<h4>Usuario</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger">Nome</div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            @Html.ValidationMessageFor(x => x.Name)
            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            @Html.ValidationMessageFor(x => x.Email)
            <div class="form-group">
                <label asp-for="Login" class="control-label"></label>
                <input asp-for="Login" class="form-control" />
                <span asp-validation-for="Login" class="text-danger"></span>
            </div>
            @Html.ValidationMessageFor(x => x.Login)
            <div class="form-group">
                <label for="Perfil" class="control-label">Perfil</label>
                <span validation-for="Perfil" class="text-danger"></span>
                <select asp-for="Perfil" class="form-control">
                    <option value="0">Selecione</option>
                    <option value="@PerfilEnum.Admin">Administrador</option>
                    <option value="@PerfilEnum.Padrao">Padrão</option>
                </select>
                @Html.ValidationMessageFor(x => x.Perfil)
            </div>
            <div class="form-group">
                <label asp-for="Senha" class="control-label"></label>
                <input type="password" asp-for="Senha" class="form-control" />
                <span asp-validation-for="Senha" class="text-danger"></span>
                @Html.ValidationMessageFor(x => x.Senha)
            </div>
            
            
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
